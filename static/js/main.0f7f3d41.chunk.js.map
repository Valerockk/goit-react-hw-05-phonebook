{"version":3,"sources":["components/ContactForm/ContactForm.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/Alert/Alert.js","components/App.js","index.js"],"names":["ContactForm","state","name","number","handleSubmit","e","preventDefault","props","onAddContact","setState","handlechange","target","value","onSubmit","this","className","type","onChange","placeholder","Component","ContactListItem","OnRemove","onClick","ContactList","contacts","onRemoveContact","TransitionGroup","component","map","id","CSSTransition","in","appear","timeout","classNames","unmountOnExit","prototype","PropTypes","arrayOf","exact","string","isRequired","func","Filter","onChangeFilter","Alert","message","INITIAL_STATE","isVisible","App","filter","findContact","contact","find","item","toLowerCase","addContact","uuid","contactFind","setTimeout","prevState","alert","changeFilter","getVisibleContact","includes","removeContact","contactId","persistedContacts","localStorage","getItem","JSON","parse","prevProps","setItem","stringify","visibleContact","length","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.0f7f3d41.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./ContactForm.css\";\nimport PropTypes from \"prop-types\";\n\nexport default class ContactForm extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    this.props.onAddContact(this.state.name, this.state.number);\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  handlechange = (e) => {\n    const { name } = e.target;\n\n    this.setState({ [name]: e.target.value });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit} className=\"ContactForm\">\n        <label className=\"ContactForm_label\">\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={this.state.name}\n            onChange={this.handlechange}\n            className=\"ContactForm_input\"\n          />\n        </label>\n\n        <label className=\"ContactForm_label\">\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            value={this.state.number}\n            onChange={this.handlechange}\n            placeholder=\"Example +380440000000\"\n            className=\"ContactForm_input\"\n          />\n        </label>\n\n        <button type=\"submit\" className=\"ContactForm_btn\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  onAddContact: PropTypes.func.isRequired,\n};\n","import React from \"react\";\nimport \"./ContactListItem.css\";\nimport PropTypes from \"prop-types\";\n\nconst ContactListItem = ({ name, number, OnRemove }) => (\n  <li className=\"ContactList_item\">\n    <p>\n      {name}: \n    </p>\n    <p>{number}</p>\n    <button type=\"button\" onClick={OnRemove} className=\"ContactList_item_btn\">\n      X\n    </button>\n  </li>\n);\n\nContactListItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  OnRemove: PropTypes.func.isRequired,\n};\n\nexport default ContactListItem;\n","import React from \"react\";\nimport ContactListItem from \"../ContactListItem/ContactListItem\";\nimport \"./ContactList.css\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport PropTypes from \"prop-types\";\n\nconst ContactList = ({ contacts, onRemoveContact }) => (\n  <TransitionGroup component=\"ul\" className=\"ContactList\">\n    {contacts.map(({ id, name, number }) => (\n      <CSSTransition\n        in={true}\n        appear={true}\n        key={id}\n        timeout={250}\n        classNames=\"Item-animation\"\n        unmountOnExit\n      >\n        <ContactListItem\n          name={name}\n          number={number}\n          OnRemove={() => onRemoveContact(id)}\n        />\n      </CSSTransition>\n    ))}\n  </TransitionGroup>\n);\n\nContactList.prototype = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n  onRemoveContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./Filter.css\";\n\nexport default function Filter({ value, onChangeFilter }) {\n  return (\n    <div className=\"Filter_form\">\n      <p className=\"Filter_title\">Find contacts by name</p>\n      <input\n        type=\"text\"\n        value={value}\n        onChange={(e) => onChangeFilter(e.target.value)}\n        className=\"Filter_input\"\n      />\n    </div>\n  );\n}\n\nFilter.prototype = {\n  value: PropTypes.string.isRequired,\n  onChangeFilter: PropTypes.func.isRequired,\n};\n","import React from \"react\";\nimport \"./Alert.css\";\n\nconst Alert = ({ message }) => (\n  <div className=\"Alert\">{message}</div>\n);\n\n\n\nexport default Alert;","import React, { Component } from \"react\";\nimport uuid from \"react-uuid\";\nimport ContactForm from \"./ContactForm/ContactForm\";\nimport ContactList from \"./ContactList/ContactList\";\nimport Filter from \"./Filter/Filter\";\nimport Alert from \"./Alert/Alert\";\nimport { CSSTransition } from \"react-transition-group\";\nimport \"./App.css\";\n\nconst INITIAL_STATE = {\n  isVisible: false,\n  message: \"\",\n};\n\nexport default class App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermion Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n    ...INITIAL_STATE,\n  };\n\n  componentDidMount() {\n    const persistedContacts = localStorage.getItem(\"contacts\");\n\n    if (persistedContacts) {\n      this.setState({ contacts: JSON.parse(persistedContacts) });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n\n  findContact = (contacts, contact) =>\n    contacts.find(\n      (item) => item.name.toLowerCase() === contact.name.toLowerCase()\n    );\n\n  addContact = (name, number) => {\n    const contact = {\n      id: uuid(),\n      name,\n      number,\n    };\n\n    const contactFind = this.findContact(this.state.contacts, contact);\n\n    this.setState(() => {\n      if (contact.name) {\n        if (contactFind) {\n          this.setState({\n            isVisible: true,\n            message: \"Contact already exists!\",\n          });\n          setTimeout(() => {\n            this.setState({\n              ...INITIAL_STATE\n            });\n          }, 3000);\n        } else {\n          this.setState((prevState) => ({\n            contacts: [...prevState.contacts, contact],\n          }));\n        }\n      } else {\n        alert(\"Input name please!\");\n      }\n\n      // contacts: [...prevState.contacts, contact],\n    });\n  };\n\n  changeFilter = (filter) => {\n    this.setState({ filter });\n  };\n\n  getVisibleContact = () => {\n    const { contacts, filter } = this.state;\n\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  removeContact = (contactId) => {\n    this.setState((prevState) => {\n      return {\n        contacts: prevState.contacts.filter(({ id }) => id !== contactId),\n      };\n    });\n  };\n\n  render() {\n    const { contacts, filter, isVisible, message } = this.state;\n    const visibleContact = this.getVisibleContact();\n\n    return (\n      <div className=\"Container\">\n        <CSSTransition\n          in={true}\n          appear={true}\n          timeout={500}\n          unmountOnExit\n          classNames=\"PhoneBook-logo\"\n        >\n          <h1 className=\"Logo\">PhoneBook</h1>\n        </CSSTransition>\n\n        <CSSTransition\n          in={isVisible}\n          timeout={250}\n          unmountOnExit\n          classNames=\"AlertTransition\"\n        >\n          <Alert message={message} />\n        </CSSTransition>\n\n        <ContactForm onAddContact={this.addContact} />\n\n        <h2>Contacts</h2>\n        {contacts.length > 1 && (\n          <Filter value={filter} onChangeFilter={this.changeFilter} />\n        )}\n        {visibleContact.length > 0 && (\n          <ContactList\n            contacts={visibleContact}\n            onRemoveContact={this.removeContact}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.querySelector(\"#root\"));\n"],"sourceRoot":""}